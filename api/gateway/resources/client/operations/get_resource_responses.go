// Code generated by go-swagger; DO NOT EDIT.

package operations

/**
 * Copyright 2020 Panther Labs Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"

	models "github.com/panther-labs/panther/api/gateway/resources/models"
)

// GetResourceReader is a Reader for the GetResource structure.
type GetResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResourceOK creates a GetResourceOK with default headers values
func NewGetResourceOK() *GetResourceOK {
	return &GetResourceOK{}
}

/*GetResourceOK handles this case with default header values.

OK
*/
type GetResourceOK struct {
	Payload *models.Resource
}

func (o *GetResourceOK) Error() string {
	return fmt.Sprintf("[GET /resource][%d] getResourceOK  %+v", 200, o.Payload)
}

func (o *GetResourceOK) GetPayload() *models.Resource {
	return o.Payload
}

func (o *GetResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceBadRequest creates a GetResourceBadRequest with default headers values
func NewGetResourceBadRequest() *GetResourceBadRequest {
	return &GetResourceBadRequest{}
}

/*GetResourceBadRequest handles this case with default header values.

Bad request
*/
type GetResourceBadRequest struct {
	Payload *models.Error
}

func (o *GetResourceBadRequest) Error() string {
	return fmt.Sprintf("[GET /resource][%d] getResourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceNotFound creates a GetResourceNotFound with default headers values
func NewGetResourceNotFound() *GetResourceNotFound {
	return &GetResourceNotFound{}
}

/*GetResourceNotFound handles this case with default header values.

Resource does not exist
*/
type GetResourceNotFound struct {
}

func (o *GetResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /resource][%d] getResourceNotFound ", 404)
}

func (o *GetResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceInternalServerError creates a GetResourceInternalServerError with default headers values
func NewGetResourceInternalServerError() *GetResourceInternalServerError {
	return &GetResourceInternalServerError{}
}

/*GetResourceInternalServerError handles this case with default header values.

Internal server error
*/
type GetResourceInternalServerError struct {
}

func (o *GetResourceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /resource][%d] getResourceInternalServerError ", 500)
}

func (o *GetResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
