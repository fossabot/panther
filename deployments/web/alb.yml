AWSTemplateFormatVersion: 2010-09-09
Description: The Application Load Balancer that will accept external connections and will forward that to our web service & tasks.

Parameters:
  VpcId:
    Type: String
    Description: The ID of the VPC associated with the application load balancer
  SubnetOneId:
    Type: String
    Description: The ID of a subnet in the VPC above
  SubnetTwoId:
    Type: String
    Description: The ID of another subnet in the VPC above
  LoadBalancerName:
    Type: String
    Description: The name of the load balancer that will sit in front of the web stack and accept traffic

Resources:
  # Public load balancer, hosted in public subnets that is accessible
  # to the public, and is intended to route traffic to one or more public
  # facing services. This is used for accepting traffic from the public
  # internet and directing it to public facing microservices
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${LoadBalancerName}-lb
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet. If you want to restrict access to the
        # load balancer from specific IPs, add your own network CIDRs.
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref LoadBalancerName
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets:
        - !Ref SubnetOneId
        - !Ref SubnetTwoId
      SecurityGroups:
        - !Ref PublicLoadBalancerSecurityGroup

  # A dummy target group is used to setup the ALB to just drop traffic
  # initially, before any real service target groups have been added.
  DummyTargetGroupPublic:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref DummyTargetGroupPublic
          Type: forward
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  LoadBalancerListenerArn:
    Description: The ARN of the public load balancer that accepts & forwards incoming traffic to ECS tasks
    Value: !Ref PublicLoadBalancerListener
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt PublicLoadBalancer.DNSName
  LoadBalancerSecurityGroupId:
    Description: The Security Group ID associated with the Public Loadbalancer that we have created
    Value: !Ref PublicLoadBalancerSecurityGroup
