AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Analysis datastore and API - stores Python bodies

Parameters:
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  Debug:
    Type: String
    Description: Toggle debug logging
    Default: false
    AllowedValues: [true, false]
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of base LayerVersion ARNs to attach to every Lambda function
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda and API Gateway
    AllowedValues: ['', Active, PassThrough]
    Default: ''

  HandlerMemorySizeMB:
    Type: Number
    Description: Memory (MB) available for the API Lambda handler
    Default: 512
    MinValue: 128
    MaxValue: 3008
  HandlerTimeoutSec:
    Type: Number
    Description: Timeout (seconds) for the API Lambda handler
    Default: 120
    MinValue: 5
    MaxValue: 900
  EngineMemorySizeMB:
    Type: Number
    Description: Memory (MB) available for the Python analysis engine
    Default: 512
    MinValue: 128
    MaxValue: 3008
  EngineTimeoutSec:
    Type: Number
    Description: Timeout (seconds) for the Python analysis engine
    Default: 120
    MinValue: 5
    MaxValue: 900

  ComplianceApiId:
    Type: String
    Description: API Gateway for compliance-api
  LayerKey:
    Type: String
    Description: S3 key for the Python analysis layer
    Default: layers/python-analysis.zip
  LayerObjectVersion:
    Type: String
    Description: S3 object version for the layer zipfile
    Default: ''
  S3BucketAccessLogs:
    Type: String
    Description: S3 bucket for storing S3 access logs
  SQSKeyId:
    Type: String
    Description: KMS key ID for SQS encryption

Conditions:
  AttachBaseLayers: !Not [!Equals [!Join ['', !Ref LayerVersionArns], '']]
  TracingEnabled: !Not [!Equals ['', !Ref TracingMode]]

Resources:
  ##### API Gateway #####
  GatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody: api/analysis/api.yml
      EndpointConfiguration: REGIONAL
      Name: panther-analysis-api
      StageName: v1
      TracingEnabled: !If [TracingEnabled, true, false]

  GatewayInvocationPermission:  # allow API gateway to invoke the Lambda function
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref HandlerFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${GatewayApi}/*

  ##### API Lambda Handler #####
  HandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../bin/internal/shared/analysis_api/main
      Description: Analysis API
      Environment:
        Variables:
          BUCKET: !Ref Bucket
          COMPLIANCE_API_HOST: !Sub '${ComplianceApiId}.execute-api.${AWS::Region}.amazonaws.com'
          COMPLIANCE_API_PATH: v1
          DEBUG: !Ref Debug
          ENGINE: panther-analysis-engine
          RESOURCE_QUEUE_URL: !Sub https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/panther-resources
          TABLE: !Ref Table
      FunctionName: panther-analysis-api
      Handler: main
      MemorySize: !Ref HandlerMemorySizeMB
      Layers: !If [AttachBaseLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      Runtime: go1.x
      Tags:
        Application: Panther
      Timeout: !Ref HandlerTimeoutSec
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - !If [TracingEnabled, 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess', !Ref 'AWS::NoValue']
        -
          Id: InvokeApis
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Action: execute-api:Invoke
              Resource:
                - !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${ComplianceApiId}/v1/GET/describe-org
                - !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${ComplianceApiId}/v1/POST/delete
                - !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${ComplianceApiId}/v1/POST/update
            -
              Effect: Allow
              Action: lambda:InvokeFunction
              Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-analysis-engine
        -
          Id: ManageDataStores
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Action:
                - dynamodb:*Item
                - dynamodb:Query
                - dynamodb:Scan
              Resource: !GetAtt Table.Arn
            -
              Effect: Allow
              Action:
                - s3:DeleteObject  # Does NOT grant permission to permanently delete versions
                - s3:GetObject*
                - s3:PutObject
              Resource: !Sub arn:${AWS::Partition}:s3:::${Bucket}/*
            -
              Effect: Allow
              Action:
                - s3:ListBucket
                - s3:ListBucketVersions
              Resource: !GetAtt Bucket.Arn
        -
          Id: PublishToResourceQueue
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:SendMessageBatch
              Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:panther-resources
            -
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource: !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/${SQSKeyId}

  HandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-analysis-api
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  ##### Python Engine #####
  PythonLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.6
        - python3.7
      Content:
        S3Bucket: !Sub panther-source-${AWS::AccountId}-${AWS::Region}
        S3Key: !Ref LayerKey
        S3ObjectVersion: !Ref LayerObjectVersion
      Description: Pip libraries available to the Python analysis function
      LayerName: panther-analysis

  EngineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../../internal/shared/analysis_engine
      Description: Python Analysis Engine
      FunctionName: panther-analysis-engine
      Handler: src.main.lambda_handler
      MemorySize: !Ref EngineMemorySizeMB
      Layers: !If
        - AttachBaseLayers
        - !Split
          # CFN doesn't have list append, so convert to/from CSV string to prepend base layers
          - ","
          - !Sub
            - "${base},${pip}"
            - {base: !Join [",", !Ref LayerVersionArns], pip: !Ref PythonLayer}
        - [!Ref PythonLayer]
      Runtime: python3.7
      Tags:
        Application: Panther
      Timeout: !Ref EngineTimeoutSec
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - !If [TracingEnabled, 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess', !Ref 'AWS::NoValue']

  EngineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-analysis-engine
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  ##### Data Stores #####
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        SSEEnabled: True
      TableName: panther-analysis
      Tags:
        - Key: Application
          Value: Panther

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub panther-analysis-versions-${AWS::AccountId}-${AWS::Region}
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 365
            Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref S3BucketAccessLogs
        LogFilePrefix: !Sub panther-analysis-versions-${AWS::AccountId}-${AWS::Region}/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Application
          Value: Panther
      VersioningConfiguration:
        Status: Enabled

Outputs:
  BucketName:
    Description: The name of the S3 analysis bucket
    Value: !Ref Bucket
  GatewayId:
    Description: API Gateway ID
    Value: !Ref GatewayApi
